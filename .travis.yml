# Taken from github.com/hvr/multi-ghc-travis
# NB: don't set `language: haskell` here

env:
 - GHCVER=7.0.4
 - GHCVER=7.2.2
 - GHCVER=7.4.2
 - GHCVER=7.6.3
 - GHCVER=7.8.2
 - GHCVER=head

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-1.18 ghc-$GHCVER
 - export PATH=/opt/ghc/$GHCVER/bin:$PATH
 - |
   if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ]; then
     travis_retry sudo apt-get install happy-1.19.3 alex-3.1.3
     export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.3/bin:$PATH
   else
     travis_retry sudo apt-get install happy alex
   fi

install:
 - cabal-1.18 update
 - cabal-1.18 install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal-1.18 configure --enable-tests --enable-benchmarks --ghc-options=-Werror -v2  # -v2 provides useful information for debugging
 - cabal-1.18 build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal-1.18 test
 - cabal-1.18 check
 - cabal-1.18 sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal-1.18 info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal-1.18 install "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi;
   cd ../

after_script:
  - cat dist/test/*.log 
